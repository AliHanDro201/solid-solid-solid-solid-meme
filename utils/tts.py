"""
–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å. 
–§—É–Ω–∫—Ü–∏—è generate_audio ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–º –Ω—É–∂–Ω–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞.
"""

import os
import time
import asyncio
import pygame
import edge_tts
import keyboard
import threading

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π
from utils.event_manager import event_manager
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ TTS –∏–∑ config.py
from core.config import TTS_DEFAULT_VOICE

def stop_audio():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∑–≤—É—á–∫—É –ø—Ä–∏ –≤—ã–∑–æ–≤–µ."""
    event_manager.request_stop_audio()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    pygame.mixer.quit()  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∞—É–¥–∏–æ—Å–∏—Å—Ç–µ–º—É
    print("üîá –û–∑–≤—É—á–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (—á–µ—Ä–µ–∑ –≤—ã–∑–æ–≤ stop_audio).")
    return "–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

def listen_capslock():
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ CapsLock –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∑–≤—É—á–∫—É."""
    while True:
        keyboard.wait("caps lock")
        stop_audio()

# –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–∏ CapsLock (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ UI)
# keyboard.add_hotkey("caps lock", stop_audio)
# capslock_thread = threading.Thread(target=listen_capslock, daemon=True)
# capslock_thread.start()

async def generate_audio(text: str, output_file: str = "audio/message.mp3", voice: str = TTS_DEFAULT_VOICE):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –µ–≥–æ.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç edge_tts –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ, –∞ –∑–∞—Ç–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –µ–≥–æ —á–µ—Ä–µ–∑ pygame.
    """
    event_manager.reset_stop_audio()

    try:
        pygame.mixer.quit()
        pygame.mixer.init()

        tts = edge_tts.Communicate(text, voice)
        await tts.save(output_file)

        pygame.mixer.music.load(output_file)
        pygame.mixer.music.play()

        while pygame.mixer.music.get_busy():
            if event_manager.should_stop_audio():
                pygame.mixer.music.stop()
                pygame.mixer.quit()
                print("üîá –û–∑–≤—É—á–∫–∞ –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
                return
            time.sleep(0.1)

    except pygame.error:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ü–ª–µ–µ—Ä pygame —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")

def listen(awake=False) -> dict:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏, —Å–µ–π—á–∞—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
    """
    import speech_recognition as sr
    recognizer = sr.Recognizer()

    with sr.Microphone() as source:
        print("—Å–ª—É—à–∞—é...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)

    try:
        text = recognizer.recognize_google(audio).lower()
        print("–≤—ã —Å–∫–∞–∑–∞–ª–∏:", text)
        return {"message": text, "error": False}
    
    except sr.UnknownValueError:
        message = "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –Ω–µ —Å–º–æ–≥–ª–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤—ã —Å–∫–∞–∑–∞–ª–∏."
        return {"message": message, "error": True}
    
    except sr.RequestError:
        message = "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏."
        return {"message": message, "error": True}
